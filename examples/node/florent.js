"use strict";
exports.__esModule = true;
var state_1 = require("../../lib/node/state");
var model = new state_1["default"].StateMachine("model");
var initial = new state_1["default"].PseudoState("initial", model, state_1["default"].PseudoStateKind.Initial);
var on = new state_1["default"].State("on", model);
var off = new state_1["default"].State("off", model);
var clean = new state_1["default"].State("clean", model);
var final = new state_1["default"].State("final", model);
var history = new state_1["default"].PseudoState("history", on, state_1["default"].PseudoStateKind.ShallowHistory);
var idle = new state_1["default"].State("idle", on);
var moveItem = new state_1["default"].State("moveItem", on);
var showMoveItemPattern = new state_1["default"].State("showMoveItemPattern", on);
var hideMoveItemPattern = new state_1["default"].State("hideMoveItemPattern", on);
initial.to(idle);
on.to(off).when(function (s) { return s === "Disable"; });
off.to(history).when(function (s) { return s === "Enable"; });
on.to(clean).when(function (s) { return s === "DestroyInput"; });
off.to(clean).when(function (s) { return s === "DestroyInput"; });
clean.to(final);
idle.to(moveItem).when(function (s) { return s === "TransformInput"; });
moveItem.to(idle).when(function (s) { return s === "ReleaseInput"; });
idle.to(showMoveItemPattern).when(function (s) { return s === "ReleaseInput"; });
showMoveItemPattern.to(hideMoveItemPattern).when(function (s) { return s === "ReleaseInput"; });
hideMoveItemPattern.to(idle);
var instance = new state_1["default"].DictionaryInstance("florent");
state_1["default"].setLogger(console);
model.initialise(instance);
model.evaluate(instance, "Disable");
model.evaluate(instance, "Enable");
